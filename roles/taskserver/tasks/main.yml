---
- name: Ensure network
  community.docker.docker_network:
    name: web

- name: Ensure Dir
  ansible.builtin.file:
    path: '{{ container_home }}/taskserver'
    mode: "0755"
    state: directory

- name: Ensure Data Dir
  ansible.builtin.file:
    path: '{{ container_home }}/taskserver/data'
    mode: "0755"
    state: directory

- name: Ensure Certs Dir
  ansible.builtin.file:
    path: '{{ container_home }}/taskserver/certs'
    mode: "0755"
    state: directory

- name: Ensure Compose file
  ansible.builtin.template:
    src: taskserver/docker-compose.yml
    dest: '{{ container_home }}/taskserver/docker-compose.yml'
    mode: "0644"

- name: Ensure Dockerfile file
  ansible.builtin.copy:
    src: taskserver/Dockerfile
    dest: '{{ container_home }}/taskserver/Dockerfile'
    mode: "0644"

- name: Ensure containers are up
  community.docker.docker_compose:
    project_name: taskserver
    project_src: '{{ container_home }}/taskserver'

- name: Register data is init
  ansible.builtin.stat:
    path: '{{ container_home }}/taskserver/data/config'
  register: data_inited

- name: Ensure data is inited
  ansible.builtin.include_tasks: init_data.yml
  when: not data_inited.stat.exists

- name: Ensure config settings
  ansible.builtin.blockinfile:
    path: '{{ container_home }}/taskserver/data/config'
    state: present
    block: |
      ca.cert=/etc/ssl/certs/ca.pem
      server.cert=/etc/ssl/certs/{{ taskserver_domain }}.pem
      server.key=/etc/ssl/certs/{{ taskserver_domain }}.key
      server=0.0.0.0:53589

- name: Register ca certs
  ansible.builtin.stat:
    path: '{{ container_home }}/taskserver/certs/ca.key'
  register: ca_certs_init

- name: Ensure certs are present
  community.docker.docker_container:
    name: taskserver_ca_certs
    image: taskserver_taskserver
    env:
      TASKDDATA: /var/taskd
    volumes:
      - '{{ container_home }}/taskserver/data:/var/taskd'
      - '{{ container_home }}/taskserver/certs:/etc/ssl/certs'
    command:
      - gotas
      - pki
      - -p
      - /etc/ssl/certs
      - init
  when: not ca_certs_init.stat.exists

- name: Register server certs
  ansible.builtin.stat:
    path: '{{ container_home }}/taskserver/certs/{{ taskserver_domain }}'
  register: server_certs_init

- name: Ensure Server certs
  community.docker.docker_container:
    name: taskserver_server_certs
    image: taskserver_taskserver
    env:
      TASKDDATA: /var/taskd
    volumes:
      - '{{ container_home }}/taskserver/data:/var/taskd'
      - '{{ container_home }}/taskserver/certs:/etc/ssl/certs'
    command:
      - gotas
      - pki
      - -p
      - /etc/ssl/certs
      - add
      - server
      - -c
      - '{{ taskserver_domain }}'
  when: not ca_certs_init.stat.exists

- name: Include User Certs
  ansible.builtin.include_tasks: user_certs.yml
  loop: '{{ taskserver_users }}'

- name: Include Org Creation
  ansible.builtin.include_tasks: orgs.yml
  loop: '{{ taskserver_orgs }}'
