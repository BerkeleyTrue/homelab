---
version: '2.1'
services:
  transmission:
    container_name: transmission
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    volumes:
      - transmission-db:/data
    environment:
      - OPENVPN_PROVIDER=PIA
      - OPENVPN_CONFIG=us_denver,us_houston,us_chicago
      - OPENVPN_USERNAME={{ arrs_openvpn_username }}
      - OPENVPN_PASSWORD={{ arrs_openvpn_password }}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60  # attempt to reconnect to vpn on disconnect
      - TZ=America/Denver
      - CREATE_TUN_DEVICE=true
      - WEBPROXY_ENABLED=false
      - DNS=8.8.8.8,8.8.4.4
    restart: unless-stopped
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https

      # service
      - traefik.http.services.transmission-service.loadbalancer.server.port=9091

      # web
      - traefik.http.routers.transmission-web.entrypoints=web
      - traefik.http.routers.transmission-web.rule=Host(`transmission.{{ traefik_public_url }}`)
      - traefik.http.routers.transmission-web.service=transmission-service
      - traefik.http.routers.transmission-web.middlewares=https-redirect,sslheader

      # secure
      - traefik.http.routers.transmission-secure.rule=Host(`transmission.{{ traefik_public_url }}`)
      - traefik.http.routers.transmission-secure.entrypoints=secureweb
      - traefik.http.routers.transmission-secure.service=transmission-service

      # sonarr service
      - traefik.http.services.sonarr-service.loadbalancer.server.port=8989

      # sonarr web
      - traefik.http.routers.sonarr-web.entrypoints=web
      - traefik.http.routers.sonarr-web.rule=Host(`sonarr.{{ traefik_public_url }}`)
      - traefik.http.routers.sonarr-web.service=sonarr-service
      - traefik.http.routers.sonarr-web.middlewares=https-redirect,sslheader

      # sonarr secure
      - traefik.http.routers.sonarr-secure.rule=Host(`sonarr.{{ traefik_public_url }}`)
      - traefik.http.routers.sonarr-secure.entrypoints=secureweb
      - traefik.http.routers.sonarr-secure.service=sonarr-service

      # prowlarr service
      - traefik.http.services.prowlarr-service.loadbalancer.server.port=9696

      # prowlarr web
      - traefik.http.routers.prowlarr-web.entrypoints=web
      - traefik.http.routers.prowlarr-web.rule=Host(`prowlarr.{{ traefik_public_url }}`)
      - traefik.http.routers.prowlarr-web.service=prowlarr-service
      - traefik.http.routers.prowlarr-web.middlewares=https-redirect,sslheader

      # prowlarr secure
      - traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.{{ traefik_public_url }}`)
      - traefik.http.routers.prowlarr-secure.entrypoints=secureweb
      - traefik.http.routers.prowlarr-secure.service=prowlarr-service

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - sonarr-db:/config
      - sonarr-downloads-db:/data/downloads  # optional
      - '{{ fuse_main_mount_point }}/series:/data/series'
    network_mode: service:transmission
    restart: unless-stopped


  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - prowlarr-db:/config
    network_mode: service:transmission
    restart: unless-stopped

volumes:
  sonarr-db:
  sonarr-downloads-db:
  prowlarr-db:
  transmission-db:

networks:
  web:
    external: true
