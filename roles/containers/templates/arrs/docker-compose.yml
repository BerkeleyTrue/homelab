---
version: '2.1'
services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - sonarr-db:/config
      - sonarr-downloads-db:/data/downloads  # optional
      - '{{ fuse_main_mount_point }}/series:/data/series'
    networks:
      - web
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https

      # service
      - traefik.http.services.sonarr-service.loadbalancer.server.port=8989

      # web
      - traefik.http.routers.sonarr-web.entrypoints=web
      - traefik.http.routers.sonarr-web.rule=Host(`sonarr.{{ traefik_public_url }}`)
      - traefik.http.routers.sonarr-web.service=sonarr-service
      - traefik.http.routers.sonarr-web.middlewares=https-redirect,sslheader

      # secure
      - traefik.http.routers.sonarr-secure.rule=Host(`sonarr.{{ traefik_public_url }}`)
      - traefik.http.routers.sonarr-secure.entrypoints=secureweb
      - traefik.http.routers.sonarr-secure.service=sonarr-service

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - prowlarr-db:/config
    networks:
      - web
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https

      # service
      - traefik.http.services.prowlarr-service.loadbalancer.server.port=9696

      # web
      - traefik.http.routers.prowlarr-web.entrypoints=web
      - traefik.http.routers.prowlarr-web.rule=Host(`prowlarr.{{ traefik_public_url }}`)
      - traefik.http.routers.prowlarr-web.service=prowlarr-service
      - traefik.http.routers.prowlarr-web.middlewares=https-redirect,sslheader

      # secure
      - traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.{{ traefik_public_url }}`)
      - traefik.http.routers.prowlarr-secure.entrypoints=secureweb
      - traefik.http.routers.prowlarr-secure.service=prowlarr-service

volumes:
  sonarr-db:
  sonarr-downloads-db:
  prowlarr-db:

networks:
  web:
    external: true
