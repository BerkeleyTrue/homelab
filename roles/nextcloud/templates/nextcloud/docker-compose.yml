---
version: '3'

volumes:
  data:
  postgres:
  redis:

networks:
  web:
    external: true

services:
  nextcloud:
    container_name: nextcloud
    image: nextcloud:{{ nextcloud_version }}-apache
    restart: unless-stopped
    logging:
      driver: journald
    depends_on:
      - nextcloud_postgres
      - nextcloud_redis
    volumes:
      - data:/var/www/html
    environment:
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: '{{ nextcloud_database_password }}'
      POSTGRES_HOST: nextcloud_postgres:5432

      REDIS_HOST: nextcloud_redis
      TRUSTED_PROXIES: 172.18.0.0/16
    networks:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/ca(l|rd)dav
      - traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/

      # service
      - traefik.http.services.nextcloud-service.loadbalancer.server.port=80

      # web
      - traefik.http.routers.nextcloud-web.entrypoints=web
      - traefik.http.routers.nextcloud-web.rule=Host(`nextcloud.{{ TRAEFIK_PUBLIC_URL }}`)
      - traefik.http.routers.nextcloud-web.service=nextcloud-service
      - traefik.http.routers.nextcloud-web.middlewares=https-redirect,sslheader

      # secure
      - traefik.http.routers.nextcloud-secure.rule=Host(`nextcloud.{{ TRAEFIK_PUBLIC_URL }}`)
      - traefik.http.routers.nextcloud-secure.entrypoints=secureweb
      - traefik.http.routers.nextcloud-secure.service=nextcloud-service
      - traefik.http.routers.nextcloud-secure.middlewares=nextcloud-dav

  nextcloud_postgres:
    container_name: nextcloud_postgres
    image: postgres:14-alpine
    logging:
      driver: journald
    environment:
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: '{{ nextcloud_database_password }}'
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - web

  nextcloud_redis:
    container_name: nextcloud_redis
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      - web
    healthcheck:
      test: [CMD, redis-cli, ping]
      interval: 1s
      timeout: 3s
      retries: 30
